#include <iostream>
using namespace std;

// Qa) BASE CLASS.

class vehicle
{
protected:
    string make, model;
    int year;

    // constructor.
public:
    vehicle(string mke, string mdl, int yr) : make(mke), model(mdl), year(yr) {}

    // virtual function to get cost of renting
    virtual double calculaterentalcost(int days) = 0;

    // details function
    virtual void details()
    {
        cout << "Make: " << make << "Model: " << model << " Year: " << endl;
    }

    // destructor.
    virtual ~vehicle() {}
};

// Qb.) DERIVED CLASSES WITH PRIVATE ATTRIBUTES

// 1. class car

class car : public vehicle
{
private:
    int numdoors;
    // constructor.
public:
    car(string mke, string mdl, int yr, int doors) : vehicle(mke, mdl, yr), numdoors(doors)
    {
    }

    // calculate rental cost

    double calculaterentalcost(int days) override
    {
        double totalcost = days * (numdoors * 50 + 1000);
        return totalcost;
    }
    void details()
    {
        cout << numdoors << endl;
    }
};
// 2. class SUV
class suv : public vehicle
{
private:
    int passengercapacity;

public:
    void details()
    {
        cout << passengercapacity << endl;
    }
};

// 3. class truck
class truck : public vehicle
{

private:
    int cargocapacity;

public:
    void details()
    {
    }
};